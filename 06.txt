import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

# Loading the dataset from a CSV file
dataset = pd.read_csv('https://raw.githubusercontent.com/mk-gurucharan/Classification/master/X=dataset.iloc[:,:4].values
y = dataset['species'].values
print(dataset.head(5))

# Splitting the dataset into training and testing sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Feature scaling using StandardScaler
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

# Creating and training a Gaussian Naive Bayes classifier
from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()
classifier.fit(X_train, y_train)
y_pred = classifier.predict(X_test)

# Calculating the confusion matrix
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)

# Calculating and printing the accuracy score
from sklearn.metrics import accuracy_score
print("Accuracy: ", accuracy_score(y_test, y_pred))

# Creating a DataFrame to display the real and predicted values
df = pd.DataFrame({'Real Values': y_test, 'Predicted Values': y_pred})
print(df)

# Calculating precision, recall, and error rate scores
from sklearn.metrics import precision_score, recall_score, accuracy_score
m = accuracy_score(y_test, y_pred)
print("Error rate:", 1 - m)
print('Precision:', precision_score(y_test, y_pred, average='micro'))
print("Recall Score:", recall_score(y_test, y_pred, average='micro'))
